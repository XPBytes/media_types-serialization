<!DOCTYPE html>
<html lang="en">
  <head>
    <title>API Viewer</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <% # The following expects webpacker to be active, but you can replace these if you use the sprockets pipeline %>
    <%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body class="container h-100" style="overflow: auto; justify-content: start">

    <%# Remove the # below to show a logo %>
    <%# link_to Rails.application.routes.url_helpers.root_path do %>
      <%# render 'shared/logo', assigns: { width: 300, height: 63, style: "flex-shrink: 0; margin: 20px 0 40px" } %>
    <%# end %>

    <div class="h-auto w-100 mb-4">
      <% links = @serializer.send(:header_links) %>
      <% if links.present? %>
        <nav class="card w-100 mb-4 card--inverse">
          <div class="card-header">
            <h5 class="card-title my-auto">HTTP Links</h5>
          </div>
          <ul class="list-group list-group-flush">
            <% links.each do |key, link| %>
              <% href = link && link[:href] || next %>
              <li class="list-group-item">
                <% if link[:templated] %>
                  <%# You need to add this route to your routes file; Use the provided generator %>
                  <%# rails g api_viewer %>
                  <%= form_tag Rails.application.routes.url_helpers.api_template_path, { method: :get, class: 'link-template-form' } do %>
                    <%= hidden_field_tag 'template[href]', href %>
                    <button type="submit"><strong><%= key %></strong></button>
                    <code><%= href.gsub(/:([a-z][^\/]*)|(?:{|%7B)([a-z][^\/{}]*)(%7D|})/) do |match|
                      tag = match.tr(':{}', '').delete('%7B').delete('%7D')
                      text_field_tag('template[%s]' % tag, nil, placeholder: tag)
                    end.html_safe %></code>
                  <% end %>
                <% else %>
                  <%= link_to href do %>
                    <strong><%= key %></strong>
                    <code><%= href %></code>
                  <% end %>
                <% end %>
              </li>
            <% end %>
          </ul>
        </nav>
      <% end %>

      <article class="card w-100 mb-4 card--inverse">
        <div class="card-body">
          <h5 class="card-title"><%= @mime_type %></h5>
          <small class="card-subtitle mb-2 text-muted">Serialized by: <%= @serializer.class.name %></small>
          <pre><code class="code" style="
          white-space: pre-wrap;
              white-space: -moz-pre-wrap;
              white-space: -o-pre-wrap;
              word-wrap: break-word;"><% code = JSON.pretty_generate(@serializer.to_hash).truncate(50_000)
                .gsub('</h1>', "</h1>\n")
                .gsub('</div>', "</div>\n")
                .gsub('<', '&lt;')
                .gsub('>', '&gt;')
                .gsub('\n', "<br>")%>
<%= code.gsub(/"href": "(http(?:s?:\/\/.*?))"/) { |full_match|
  href = full_match[9...-1]
  '"href": "' + link_to(href.gsub('%7B', '{').gsub('%7D', '}'), href).html_safe + '"' rescue full_match
}.html_safe %></code></pre>
        </div>
      </article>

      <nav class="card w-100 mb-4 card--inverse">
        <div class="card-header">
          <h5 class="card-title my-auto">Endpoint representations</h5>
        </div>
        <ul class="list-group list-group-flush">
          <% @representations.each do |representation| %>
            <% mime_type = Mime::Type.lookup(representation) || next %>
            <li class="list-group-item">
              <%= link_to (@url_context + ".#{mime_type.symbol}").sub('/.', '.')  do %>
                <strong><%= representation %></strong>
                <code><%= mime_type.symbol %></code>
              <% end %>
            </li>
          <% end %>
        </ul>
      </nav>
    </div>
  </body>
</html>

